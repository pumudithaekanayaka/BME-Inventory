<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACaAAQAmgAEAJoABACaAAQBmgAEA5oABAGaAAQAmgAEFpoABF+aAASkmgAE1poA
        BPWaAAT/mgAE/5oABPWaAATXmgAEpJoABF+aAAQXmgAEAJoABAGaAAQDmgAEAZoABACaAAQBmgAEAZoA
        BACaAAQAmgAEAAAAAAAAAAAAmgAEAJoABACaAAQAmgAEApoABAOaAAQAmgAEKJoABJiaAATumgAE/5oA
        BP6aAAT/mgAE+5oABO+aAATvmgAE+5oABP+aAAT+mgAE/5oABO6aAASZmgAEKJoABACaAAQCmgAEA5oA
        BAGaAAQBmgAEAZoABACaAAQAAAAAAJoABACaAAQAmgAEAJoABAOaAAQAmgAECZoABIuaAAT5mgAE/5oA
        BPqaAAS6mgAEbZoABDmaAAQdmgAEEZoABBGaAAQdmgAEOZoABG2aAAS6mgAE+poABP+aAAT6mgAEjJoA
        BAqaAAQAmgAEB5oABAeaAAQAmgAEAJoABACaAAQAmgAEAJoABACaAAQDmgAEAJoABCWaAATPmgAE/5oA
        BPiaAASXmgAEJJoABACaAAQBmgAEAAAAAAAAAAAAAAAAAAAAAACaAAQAmgAEAZoABACaAAQkmgAEl5oA
        BPiaAAT/mgAEzZoABDmaAATKmgAExpoABAOaAAQAmgAEAZoABACaAAQAmgAEA5oABACaAAQzmgAE6JoA
        BP+aAATQmgAEMpoABACaAAQBmgAEApoABASaAAQDmgAEApoABAGaAAQBmgAEApoABAOaAAQEmgAEApoA
        BAGaAAQAmgAENZoABM+aAAT/mgAE+5oABP6aAAT/mgAENZoABACaAAQDmgAEAJoABAKaAAQAmgAEJ5oA
        BOeaAAT/mgAErZoABAqaAAQAmgAEBJoABAKaAAQAmgAEAJoABACaAAQAAAAAAAAAAACbAAQAmgAEAJsA
        BACaAAQAmgAEApoABAWaAAQAmgAEL5oABPeaAAT+mgAE+JoABP+aAARvmgAEAJoABASaAAQBmgAEAJoA
        BAqaAATLmgAE/5oABKyaAAQBmgAEAZoABAOaAAQAmgAEAJoABAGaAAQBmgAEAZoABAGaAAQBmgAEAZoA
        BAGaAAQBmgAEAZoABAGaAAQBmgAEAJoABASaAATMmgAE/5oABPiaAAT4mgAE/5oABK2aAAQAmgAEA5oA
        BAOaAAQAmgAEipoABP+aAATNmgAEC5kABACaAAQCmgAEAJoABAGaAAQDmgACAJoABACaAAQAAAAAAAAA
        AAAAAAAAAAAAAJoABACaAAQAmgACAJoABASYAAQAmgAEA5oABMSaAAT/mgAE/poABP2aAAT/mgAE5ZoA
        BAqaAAQAmgAEAJoABCyaAAT6mgAE/ZoABDiaAAQAmgAEA5oABACaAAQAmgAEApoABACaAAQJmgAEEZoA
        BBCaAAQQmgAEEJoABBCaAAQQmgAEEJoABBGaAAQJmgAEAJoABAKaAAQAmgAEBpoABDGaAARsmgAEqZoA
        BOmaAATImgAEBpoABACaAAQAmgAEl5oABP+aAASVmgAEAJoABASaAAQAmgAEAZoABACaAAQHmgAEj5oA
        BOqaAATymgAE8poABPKaAATymgAE8poABPKaAATymgAE8poABOqaAASPmgAEB5oABACaAAQCmgAEAJoA
        BACaAAQAmgAECpoABAqaAAQCmgAEApoABBqaAATrmgAE/5oABCuaAAQAmgAEApoABACaAAQDmgAEAJoA
        BJCaAAT/mgAE+JoABPKaAATzmgAE85oABPOaAATymgAE8poABPKaAATymgAE+JoABP+aAASQmgAEAJoA
        BASaAAQDmgAEBJoABAOZAAIAmAACAJoABACaAAQBmgAEX5oABP+aAAS4mgAEAJoABAKaAAQAmgAEAZoA
        BACaAAQJmgAE45oABP+aAARDmgAECJoABBKaAAQLmgAEEJoABBGaAAQQmgAEEpoABAeaAARDmgAE/5oA
        BOOaAAQJmgAEAJoABAGbAAUAmgAEAZoABACaAAQUmgAEc5oABCKaAASimgAE/5oABHCaAAQAmgAEBJoA
        BACaAAQBmgAEAJoABBCaAATxmgAE8poABBCaAAQAmgAEBJoABA2aAAQDmgAEAJoABACaAAQBmgAEAJoA
        BBCaAATymgAE8ZoABBCaAAQAmgAEAQAAAACaAAQEmgAEAJoABGCaAAT/mgAEn5oABNSaAAT/mgAEPJoA
        BACaAAQDmgAEAJoABAGaAAQAmgAEEJoABPKaAATzmgAEEZoABQCaAATCmgAE/5oABMGaAAQDmgAFAJoA
        BAOaAAQAmgAEEpoABPOaAATymgAEEJoABACaAAQBAAAAAJoABAOaAAQAmgAEQJoABP+aAATSmgAE85oA
        BPyaAAQfmgAEAJoABAKaAAQAmgAEAZoABACaAAQQmgAE8poABPOaAAQPmgAEAJoABMGaAAT/mgAEwJoA
        AwKaAAQAmgAEApoABACaAAQQmgAE8poABPKaAAQQmgAEAJoABAEAAAAAmgAEApoABACaAAQhmgAE/poA
        BPKaAAT/mgAE8JoABBKaAAQAmgAEAQAAAACaAAQBmgAEAJoABBCaAATymgAE8poABBCaAAQAmQACBp0F
        CBKlFhMG////ANl9VwGUAAABmgAEAJoABBCaAATymgAE8poABBCaAAQAmgAEAQAAAACaAAQBmgAEAJoA
        BBOaAATxmgAE/5oABP+aAATwmgAEEpoABACaAAQBAAAAAJoABAGaAAQAmgAEEJoABPKaAATymgAEEJoA
        BACaAAQCmgAEAMZXPgDxrHcA8ax3AbMyJQKcBAcAmgAEEJoABPKaAATymgAEEJoABACaAAQBAAAAAJoA
        BAGaAAQAmgAEE5oABPCaAAT/mgAE8poABPyaAAQfmgAEAJoABAIAAAAAmgAEAZoABACaAAQQmgAE8poA
        BPKaAAQQlQAAAAAAAADml2kG7qdzE/GteBLxrHcGAAAAAJUAAACaAAQQmgAE8poABPKaAAQQmgAEAJoA
        BAGaAAQAmgAEApoABACaAAQfmgAE/JoABPKaAATTmgAE/5oABD2aAAQAmgAEAwAAAACaAAQBmgAEAJoA
        BBCaAATymgAE85wFBxOkFBEAqh8ZA/Crdrnxq3b18at29fCrdrmpHRgDpBMRAJwFBxOaAATzmgAE8poA
        BBCaAAQAmgAEAZoABACaAAQDmgAEAJoABDyaAAT/mgAE05oABJ6aAAT/mgAEU5oABACaAAQEAAAAAJoA
        BAGaAAQAmgAEEJoABPGaAATyoAwMEcZXPgDtpHIT8q957vKvef/yr3n/8q957u2kchPGVz4AoAwMEZoA
        BPKaAATxmgAEEJoABACaAAQBmgAEAJoABASaAAQAmgAEcJoABP+aAAShmgAEHJoABFmaAAQJmgAEAJoA
        BAGbAAUAmgAEAZoABACaAAQJmgAE45oABP+bAwZEKwAAA8JQOSLroG/s66Fw/+uhcP/roG/swlA5IikA
        AAObAwZEmgAE/5oABOOaAAQJmgAEAJoABAGaAAQAmgAEApoABACaAAS4mgAE/5oABF6aAAQBmgAEAJoA
        BACWAAAAmgAEA5oABASaAAQDmgAEBJoABACaAASQmgAE/5oABPiaAATxmgEF858LC/6gDAz/oAwM/58L
        C/6aAQXzmgAE8ZoABPiaAAT/mgAEkJoABACaAAQDmgAEAJoABAKaAAQAmgAEK5oABP+aAATqmgAEGZoA
        BAKaAAQCmgAEB5oABAmaAAQAmgAEAJoABACaAAQCmgAEAJoABAeaAASPmgAE6poABPOaAATxmAAC7pgA
        Au6YAALumAAC7poABPGaAATzmgAE6poABJCaAAQHmgAEAJoABAGaAAQAmgAEBJoABACaAASVmgAE/5oA
        BJaaAAQAmgAEAJoABAKaAAS+mgAE6ZoABKqaAARtmgAEMZoABAaaAAQAmgAEApoABACaAAQJmgAEEZoB
        BRCfCwsRoAwMEaAMDBGfCwsRmgEFEJoABBGaAAQJmgAEAJoABAKaAAQAmgAEAJoABAOaAAQAmgAEOJoA
        BP2aAAT6mgAELJoABACaAAQAmgAECJoABOKaAAT/mgAE/ZoABP6aAAT/mgAEw5oABAOaAAQAmgAEBJgA
        AgCaAAQAmgAEAAAAAAAAAAAAAAAAAAAAAACaAAQAmgAEAJcAAgCaAAQDmgAEAZoABACaAAQCmgAEAJoA
        BAuaAATNmgAE/5oABIqaAAQAmgAEA5oABAOaAAQAmgAEqJoABP+aAAT4mgAE+JoABP+aAATMmgAEBJoA
        BACaAAQBmgAEAZoABAGaAAQBmgAEAZoABAGaAAQBmgAEAZoABAGaAAQBmgAEAZoABACaAAQAmgAEA5oA
        BAGbAAUBmgAErJoABP+aAATMmgAECpoABACaAAQBmgAEBJoABACaAARrmgAE/5oABPmaAAT+mgAE+JoA
        BC+aAAQAmgAEBZoABAKaAAQAmQAEAJoABACaAAQAAAAAAAAAAACaAAQAmgAEAJkABACaAAQAmgAEApoA
        BASaAAQAmgAECpoABK2aAAT/mgAE6JoABCiaAAQAmgAEApoABACaAAQDmgAEAJoABDKaAAT/mgAE/5oA
        BPuaAAT/mgAE0JoABDSaAAQAmgAEAZoABAKaAAQEmgAEA5oABAKaAAQBmgAEAZoABAKaAAQDmgAEBJoA
        BAKaAAQBmgAEAJoABDKaAATPmgAE/5oABOmaAAQ0mgAEAJoABAOaAAQAmgAEAJoABAGaAAQAmgAEApoA
        BMiaAATUmgAEPJoABMyaAAT/mgAE+JoABJeaAAQkmgAEAJoABAGaAAQAAAAAAAAAAAAAAAAAAAAAAJoA
        BACaAAQBmgAEAJoABCSaAASXmgAE+JoABP+aAATQmgAEJpoABACaAAQDmgAEAJoABACaAAQAmgAEAJoA
        BACaAAQAmgAECpoABAyaAAQAmgAECpoABIqaAAT5mgAE/5oABPqaAAS6mgAEbZoABDmaAAQdmgAEEZoA
        BBGaAAQdmgAEOZoABGyaAAS5mgAE+poABP+aAAT5mgAEipoABAmaAAQAmgAEA5oABACaAAQAmgAEAAAA
        AACaAAQAmgAEAJoABAGaAAQBmgAEAZoABAOaAAQCmgAEAJoABCeaAASXmgAE7poABP+aAAT+mgAE/5oA
        BPuaAATvmgAE75oABPuaAAT/mgAE/poABP+aAATumgAEmJoABCeaAAQAmgAEA5oABAKaAAQAmgAEAJoA
        BAAAAAAAAAAAAJoABACaAAQAmgAEAJoABAGaAAQBmgAEAJoABAGaAAQDmgAEAZoABACaAAQWmgAEXpoA
        BKOaAATWmgAE9ZoABP+aAAT/mgAE9ZoABNaaAASjmgAEXpoABBaaAAQAmgAEAZoABAOaAAQBmgAEAJoA
        BACaAAQAAAAAAAAAAAAAAAAA9EACJekAAILUAAAkqBPIAlBAAgKgi9ECQEACAkKL0gGFIAUBioABUAiA
        AQYRAACoEQiQqBEIEKgVCFCoFQgQqBUKkKgVCBCoFQgQiBUIEIgVAACIAIABEAqAAVGAoAShgEvRQkBA
        AgJAi9EFQEACCkATyBUkAAArQQAAl6RAAi8=
</value>
  </data>
</root>