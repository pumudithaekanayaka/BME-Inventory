<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwPv/LcD7/y3A
        +/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD6rwAAAAAAAAAAkWHur5Ji8P+SYvD/kmLw/5Ji
        8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3A
        +/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPqvAAAAAAAAAACRYe6vkmLw/5Ji
        8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+q8AAAAAAAAAAJFh
        7q+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAtwPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD6rwAA
        AAAAAAAAkWHur5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A
        +/8twPqvAAAAAAAAAACRYe6vkmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcD7/y3A+/8twPv/LcD7/y3A+/8twPv/LcD7/y3A
        +/8twPv/LcD7/y3A+q8AAAAAAAAAAJFh7q+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji
        8P+SYvD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwPv/LcD7/y3A+/8twPv/LcD7/y3A
        +/8twPv/LcD7/y3A+/8twPv/LcD6rwAAAAAAAAAAkWHur5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji
        8P+SYvD/kmLw/5Ji8P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3A+/8twPv/LcD7/y3A
        +/8twPv/LcD7/y3A+/8twPv/LcD7/y3A+/8twPqvAAAAAAAAAACRYe6vkmLw/5Ji8P+SYvD/kmLw/5Ji
        8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJFh7q+SYvD/kmLw/5Ji
        8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkWHur5Ji
        8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADVD9F81Q/RfNUP0XzVD9F81Q/RfNUP0XzVD9F81Q/RfNUP0XzVD9F8zQvNBAAAAAAAA
        AACRYe6vkmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAANkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zVD
        868AAAAAAAAAAJFh7q+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD
        9P82Q/T/NUPzrwAAAAAAAAAAkWHur5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji8P+SYvD/kmLw/5Ji
        8P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD
        9P82Q/T/NkP0/zZD9P81Q/OvAAAAAAAAAACRYu9BkGDuX5Bg7l+QYO5fkGDuX5Bg7l+QYO5fkGDuX5Bg
        7l+QYO5fkGDuXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkP0/zZD9P82Q/T/NkP0/zZD
        9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zVD868AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Q/T/NkP0/zZD
        9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NUPzrwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZD
        9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P81Q/OvAAAAAAAAAAAAl/+vAJj//wCY
        //8AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AJj//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zVD868AAAAAAAAAAACX
        /68AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA2Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NUPzrwAA
        AAAAAAAAAJf/rwCY//8AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AJj//wCY//8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD
        9P81Q/OvAAAAAAAAAAAAl/+vAJj//wCY//8AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AJj//wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD
        9P82Q/T/NkP0/zVD868AAAAAAAAAAACX/68AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AJj//wCY
        //8AmP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2Q/T/NkP0/zZD9P82Q/T/NkP0/zZD
        9P82Q/T/NkP0/zZD9P82Q/T/NUPzrwAAAAAAAAAAAJf/rwCY//8AmP//AJj//wCY//8AmP//AJj//wCY
        //8AmP//AJj//wCY//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZD9P82Q/T/NkP0/zZD
        9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P81Q/OvAAAAAAAAAAAAl/+vAJj//wCY//8AmP//AJj//wCY
        //8AmP//AJj//wCY//8AmP//AJj//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkP0/zZD
        9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zZD9P82Q/T/NkP0/zVD868AAAAAAAAAAACX/68AmP//AJj//wCY
        //8AmP//AJj//wCY//8AmP//AJj//wCY//8AmP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////ABgA/wAYAP8AGAD/ABgA/wAYAP8AGAD/AB
        gA/wAYAP//+AD///gA/wAYAP8AGAD/ABgA/wAYAP8AH///AB///wAYAP8AGAD/ABgA/wAYAP8AGAD/AB
        gA/wAYAP8AGAD/////////////////////8=
</value>
  </data>
</root>